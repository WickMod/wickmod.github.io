---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

const posts = (await getCollection('blog')).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
        <img src="GnomadBanner.png" alt="" class="banner">
		<main>
            <div>
                <h5>Wander the twisting reaches 
                    of this whimsical fairytale world overflowing with
                    bouncing combat, outlandish characters,
                    and more loot than you can carry!</h5>

                <p style="text-align:center">
                    <iframe width="420" height="315" frameborder="0"
                    src="https://youtube.com/embed/jOFa_hshM4Qautoplay=1&mute=1controls=0">
                    </iframe>
                </p>

                <h3>Gnomad</h3>

                <p>is a hand-drawn 2D metroidvania platformer being developed by Team Tomte.
                    We are a team of 3 undergraduate students working to craft an expansive world
                    by combining our artistic and technical abilities.
                </p>

                <h3>My Role</h3>
                <p>
                    On Gnomad is the <b>project lead</b>, but most of my day to day work consists 
                    of <b>Technical Art</b>, <b>Editor System Design</b>, and <b>illustration</b>.
                    My main tasks on the project were
                </p>

                <ul class="bullet-list">
                    <li>Establish a pipline for 2D sprite assets</li>
                    <li>Create abstract templates for interactive prop prefabs</li>
                    <li>Design and implement an environment editor system in C# with a visual interface</li>
                    <li>Illustrate and animate hundreds of props and characters</li>
                    <li>Manage project timeline with schedules and project management tools like Trello</li>
                </ul>

                <h3>Technical Art</h3>
                <p>The environment editor system for Gnomad needs to be robust and flexible. Managing thousands of sprites between nine different Z layers is complicated. This system handles placement procedure, rendering layers, post processing effects, lighting layers, sprite seeding, and prop painting.
                    Gnomad is being developed by a very small team (3 strong). I am the lone visual artist as well as the project leader. Between developing player attacks, asset pipelines, time management, and publicity, there is not much time for drawing new assets. I knew this from the start, so I chose an art style that would be fast to implement. Flat colors and uniform lines look okay on their own, but can be enhanced greatly by the lighting/effect systems, and by the jittering of modifying values such as hue, saturation, rotation, etc.
                    The purpose of the environment editor is therefore twofold: handle prop management for environment creation, and add procedural variation to the props as they are placed.
                    </p>
                <h2>
                
                </h2>
            </div>
            <!-- 
			<section>
				<ul>
					{
						posts.map((post) => (
							<li class="blog-list">
								<a href={`/blog/${post.slug}/`}>
									<img width={720} height={360} src={post.data.heroImage} alt="" />
									<h4 class="title">{post.data.title}</h4>
									<p class="date">
										<FormattedDate date={post.data.pubDate} />
									</p>
								</a>
							</li>
						))
					}
				</ul>
			</section>
            -->
		</main>
        <img src="GnomadGrass.png" alt="" class="border-flourish">
		<Footer />
	</body>
</html>


<style>
    body{
        cursor:url('GnomadPointer.png'), auto;
    }
    main {
        width: 45%;
    }
    .blog-list {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        list-style-type: none;
        margin: 0;
        padding: 0;
    }
    .blog-list li {
        width: calc(50% - 1rem);
    }
    .blog-list li * {
        text-decoration: none;
        transition: 0.2s ease;
        /*change this if selection cursor is added*/
        cursor:url('GnomadPointer.png'), auto;
    }
    .blog-list li:first-child {
        width: 100%;
        margin-bottom: 1rem;
        text-align: center;
    }
    .blog-list li:first-child img {
        width: 100%;
    }
    .blog-list li:first-child .title {
        font-size: 2.369rem;
    }
    .blog-list li img {
        margin-bottom: 0.5rem;
        border-radius: 1%;
    }
    .blog-list li a {
        display: block;
    }
    .title {
        margin: 0;
        color: rgb(var(--black));
        line-height: 1;
    }
    .date {
        margin: 0;
        color: rgb(var(--gray));
    }
    .blog-list li a:hover h4,
    .blog-list li a:hover .date {
        color: rgb(var(--accent));
    }
    .blog-list a:hover img {
        box-shadow: var(--box-shadow);
    }
    .border-flourish{
        position:fixed;
        bottom:-50%;
        width:100%;
        height:auto;
    }
    .banner{
        object-fit: cover;
        border-radius: 0%;
        width: 100%;
    }

    @media (max-width: 720px) {
        .blog-list {
            gap: 0.5em;
        }
        .blog-list li {
            width: 100%;
            text-align: center;
        }
        .blog-list li:first-child {
            margin-bottom: 0;
        }
        .blog-list li:first-child .title {
            font-size: 1.563em;
        }
    }
</style>